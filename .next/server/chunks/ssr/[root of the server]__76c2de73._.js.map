{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Mock de dados (simula um banco de dados)\nlet mockAnimes = [\n  { id: '1', title: 'Attack on Titan', genre: 'Ação, Fantasia' },\n  { id: '2', title: 'Demon Slayer', genre: 'Ação, Aventura' },\n];\n\nexport const api = {\n  // Busca todos os animes (simula uma API real)\n  getAnimes: async () => {\n    await new Promise(resolve => setTimeout(resolve, 500)); // Delay de 0.5s\n    return { data: mockAnimes };\n  },\n\n  // Deleta um anime\n  deleteAnime: async (id: string) => {\n    mockAnimes = mockAnimes.filter(anime => anime.id !== id);\n    return { data: { success: true } };\n  },\n\n  addAnime: async (newAnime: { title: string; genre: string }) => {\n    await new Promise(resolve => setTimeout(resolve, 500)); // Simula delay\n    const anime = { \n      id: Date.now().toString(), // Gera um ID único\n      ...newAnime \n    };\n    mockAnimes.push(anime);\n    return { data: anime };\n  },\n\n  updateAnime: async (id: string, data: { title: string; genre: string }) => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    const index = mockAnimes.findIndex(anime => anime.id === id);\n    if (index !== -1) {\n      mockAnimes[index] = { ...mockAnimes[index], ...data };\n    }\n    return { data: mockAnimes[index] };\n  }\n};"],"names":[],"mappings":";;;AAEA,2CAA2C;AAC3C,IAAI,aAAa;IACf;QAAE,IAAI;QAAK,OAAO;QAAmB,OAAO;IAAiB;IAC7D;QAAE,IAAI;QAAK,OAAO;QAAgB,OAAO;IAAiB;CAC3D;AAEM,MAAM,MAAM;IACjB,8CAA8C;IAC9C,WAAW;QACT,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,gBAAgB;QACxE,OAAO;YAAE,MAAM;QAAW;IAC5B;IAEA,kBAAkB;IAClB,aAAa,OAAO;QAClB,aAAa,WAAW,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;QACrD,OAAO;YAAE,MAAM;gBAAE,SAAS;YAAK;QAAE;IACnC;IAEA,UAAU,OAAO;QACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,eAAe;QACvE,MAAM,QAAQ;YACZ,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,GAAG,QAAQ;QACb;QACA,WAAW,IAAI,CAAC;QAChB,OAAO;YAAE,MAAM;QAAM;IACvB;IAEA,aAAa,OAAO,IAAY;QAC9B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,MAAM,QAAQ,WAAW,SAAS,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;QACzD,IAAI,UAAU,CAAC,GAAG;YAChB,UAAU,CAAC,MAAM,GAAG;gBAAE,GAAG,UAAU,CAAC,MAAM;gBAAE,GAAG,IAAI;YAAC;QACtD;QACA,OAAO;YAAE,MAAM,UAAU,CAAC,MAAM;QAAC;IACnC;AACF","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/edit/%5Bid%5D.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { api } from '../../services/api';\n\nexport default function EditAnime() {\n  const router = useRouter();\n  const { id } = router.query;\n  const [form, setForm] = useState({ title: '', genre: '' });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Carrega os dados do anime ao iniciar\n  useEffect(() => {\n    const loadAnime = async () => {\n      try {\n        const response = await api.getAnimes();\n        const anime = response.data.find((a: any) => a.id === id);\n        if (anime) {\n          setForm({ title: anime.title, genre: anime.genre });\n        }\n      } catch (error) {\n        console.error('Erro ao carregar anime:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (id) loadAnime();\n  }, [id]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await api.updateAnime(id as string, form);\n      router.push('/');\n    } catch (error) {\n      console.error('Erro ao atualizar:', error);\n      alert('Erro ao salvar alterações!');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-[#F8F9FA] flex items-center justify-center\">\n        <p className=\"text-xl\">Carregando...</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Editar Anime</title>\n      </Head>\n\n      <div className=\"min-h-screen bg-[#F8F9FA] p-6\">\n        <div className=\"max-w-md mx-auto bg-white p-6 rounded-lg shadow-md\">\n          <h1 className=\"text-2xl font-bold text-[#EE0000] mb-4\">Editar Anime</h1>\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 mb-2\">Título*</label>\n              <input\n                type=\"text\"\n                value={form.title}\n                onChange={(e) => setForm({ ...form, title: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded focus:ring-2 focus:ring-[#5FFBF1]\"\n                required\n              />\n            </div>\n            <div className=\"mb-6\">\n              <label className=\"block text-gray-700 mb-2\">Gênero*</label>\n              <input\n                type=\"text\"\n                value={form.genre}\n                onChange={(e) => setForm({ ...form, genre: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded focus:ring-2 focus:ring-[#5FFBF1]\"\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-[#EE0000] text-white py-2 rounded hover:bg-red-700\"\n            >\n              Salvar Alterações\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,KAAK;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,OAAO;QAAI,OAAO;IAAG;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,uCAAuC;IACvC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,WAAW,MAAM,+GAAA,CAAA,MAAG,CAAC,SAAS;gBACpC,MAAM,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,IAAW,EAAE,EAAE,KAAK;gBACtD,IAAI,OAAO;oBACT,QAAQ;wBAAE,OAAO,MAAM,KAAK;wBAAE,OAAO,MAAM,KAAK;oBAAC;gBACnD;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;YAC3C,SAAU;gBACR,aAAa;YACf;QACF;QACA,IAAI,IAAI;IACV,GAAG;QAAC;KAAG;IAEP,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,+GAAA,CAAA,MAAG,CAAC,WAAW,CAAC,IAAc;YACpC,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,MAAM;QACR;IACF;IAEA,IAAI,WAAW;QACb,qBACE,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAE,WAAU;0BAAU;;;;;;;;;;;IAG7B;IAEA,qBACE;;0BACE,qKAAC,6HAAA,CAAA,UAAI;0BACH,cAAA,qKAAC;8BAAM;;;;;;;;;;;0BAGT,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,qKAAC;4BAAK,UAAU;;8CACd,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAM,WAAU;sDAA2B;;;;;;sDAC5C,qKAAC;4CACC,MAAK;4CACL,OAAO,KAAK,KAAK;4CACjB,UAAU,CAAC,IAAM,QAAQ;oDAAE,GAAG,IAAI;oDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;gDAAC;4CAC1D,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAGZ,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAM,WAAU;sDAA2B;;;;;;sDAC5C,qKAAC;4CACC,MAAK;4CACL,OAAO,KAAK,KAAK;4CACjB,UAAU,CAAC,IAAM,QAAQ;oDAAE,GAAG,IAAI;oDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;gDAAC;4CAC1D,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAGZ,qKAAC;oCACC,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;AAQb","debugId":null}}]
}