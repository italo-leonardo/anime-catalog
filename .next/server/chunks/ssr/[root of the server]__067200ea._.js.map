{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/services/api.ts"],"sourcesContent":["// src/services/api.ts\nimport axios, { AxiosError, AxiosResponse } from 'axios';\n\n// 1. Configuração base do Axios\nconst api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000/animes',\n  timeout: 10000, // 10 segundos\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 2. Interceptores para tratamento global de erros\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    if (error.response) {\n      console.error('Erro na resposta:', {\n        status: error.response.status,\n        data: error.response.data,\n      });\n    } else if (error.request) {\n      console.error('Sem resposta do servidor:', error.request);\n    } else {\n      console.error('Erro na requisição:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 3. Tipagem das respostas\ninterface Anime {\n  id: string;\n  title: string;\n  genre: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// 4. Interface do serviço\ninterface ApiService {\n  getAnimes: () => Promise<AxiosResponse<Anime[]>>;\n  addAnime: (data: Omit<Anime, 'id' | 'createdAt' | 'updatedAt'>) => Promise<AxiosResponse<Anime>>;\n  updateAnime: (id: string, data: Partial<Omit<Anime, 'id' | 'createdAt'>>) => Promise<AxiosResponse<Anime>>;\n  deleteAnime: (id: string) => Promise<AxiosResponse<void>>;\n}\n\n// 5. Implementação do serviço\nconst apiService: ApiService = {\n  getAnimes: () => api.get('/'),\n\n  addAnime: (data) => api.post('/', data),\n\n  updateAnime: (id, data) => api.put(`/${id}`, data),\n\n  deleteAnime: (id) => api.delete(`/${id}`),\n};\n\n// 6. Exportação padrão\nexport default apiService;"],"names":[],"mappings":"AAAA,sBAAsB;;;;AACtB;;;;;;AAEA,gCAAgC;AAChC,MAAM,MAAM,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAC5C,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,mDAAmD;AACnD,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAA4B,UAC7B,CAAC;IACC,IAAI,MAAM,QAAQ,EAAE;QAClB,QAAQ,KAAK,CAAC,qBAAqB;YACjC,QAAQ,MAAM,QAAQ,CAAC,MAAM;YAC7B,MAAM,MAAM,QAAQ,CAAC,IAAI;QAC3B;IACF,OAAO,IAAI,MAAM,OAAO,EAAE;QACxB,QAAQ,KAAK,CAAC,6BAA6B,MAAM,OAAO;IAC1D,OAAO;QACL,QAAQ,KAAK,CAAC,uBAAuB,MAAM,OAAO;IACpD;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAoBF,8BAA8B;AAC9B,MAAM,aAAyB;IAC7B,WAAW,IAAM,IAAI,GAAG,CAAC;IAEzB,UAAU,CAAC,OAAS,IAAI,IAAI,CAAC,KAAK;IAElC,aAAa,CAAC,IAAI,OAAS,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;IAE7C,aAAa,CAAC,KAAO,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI;AAC1C;uCAGe","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/index.tsx"],"sourcesContent":["// pages/index.tsx\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport api from '../services/api';\n\ninterface Anime {\n  id: string;\n  title: string;\n  genre: string;\n  createdAt: string;\n}\n\nexport default function Home() {\n  const [animes, setAnimes] = useState<Anime[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const router = useRouter();\n\n  useEffect(() => {\n    async function loadAnimes() {\n      try {\n        const response = await api.getAnimes();\n        setAnimes(response.data);\n      } catch (err) {\n        setError('Falha ao carregar animes');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadAnimes();\n  }, []);\n\n  const handleDelete = async (id: string) => {\n    if (confirm('Tem certeza que deseja excluir este anime?')) {\n      try {\n        await api.deleteAnime(id);\n        setAnimes(animes.filter(anime => anime.id !== id));\n      } catch (err) {\n        alert('Erro ao excluir anime');\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <p>Carregando...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <p className=\"text-red-500\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Catálogo de Animes</title>\n      </Head>\n\n      <div className=\"min-h-screen bg-gradient-to-br from-[#86A8E7] to-[#5FFBF1] p-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          <header className=\"mb-8 text-center\">\n            <h1 className=\"text-4xl font-bold text-[#EE0000] mb-2\">\n              Meu Catálogo de Animes\n            </h1>\n            <p className=\"text-gray-600\">\n              {animes.length} {animes.length === 1 ? 'anime' : 'animes'} cadastrados\n            </p>\n          </header>\n\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-2xl p-6\">\n            <button\n              onClick={() => router.push('/add')}\n              className=\"bg-[#EE0000] text-white px-6 py-3 rounded-full shadow-lg hover:bg-red-700 transition flex items-center mx-auto mb-6\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clipRule=\"evenodd\" />\n              </svg>\n              Adicionar Anime\n            </button>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {animes.map((anime) => (\n                <div key={anime.id} className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-[#EE0000] hover:shadow-lg transition\">\n                  <h2 className=\"text-xl font-semibold text-gray-800\">{anime.title}</h2>\n                  <p className=\"text-[#86A8E7] mb-2\">{anime.genre}</p>\n                  <p className=\"text-sm text-gray-400\">\n                    Cadastrado em: {new Date(anime.createdAt).toLocaleDateString()}\n                  </p>\n                  <div className=\"flex justify-end space-x-2 mt-2\">\n                    <button\n                      onClick={() => router.push(`/edit/${anime.id}`)}\n                      className=\"text-[#86A8E7] hover:text-blue-600 px-2 py-1 rounded\"\n                    >\n                      Editar\n                    </button>\n                    <button\n                      onClick={() => handleDelete(anime.id)}\n                      className=\"text-[#EE0000] hover:text-red-600 px-2 py-1 rounded\"\n                    >\n                      Excluir\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"AAAA,kBAAkB;;;;;AAClB;AACA;AACA;AACA;;;;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,IAAI;gBACF,MAAM,WAAW,MAAM,+GAAA,CAAA,UAAG,CAAC,SAAS;gBACpC,UAAU,SAAS,IAAI;YACzB,EAAE,OAAO,KAAK;gBACZ,SAAS;gBACT,QAAQ,KAAK,CAAC;YAChB,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,eAAe,OAAO;QAC1B,IAAI,QAAQ,+CAA+C;YACzD,IAAI;gBACF,MAAM,+GAAA,CAAA,UAAG,CAAC,WAAW,CAAC;gBACtB,UAAU,OAAO,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;YAChD,EAAE,OAAO,KAAK;gBACZ,MAAM;YACR;QACF;IACF;IAEA,IAAI,SAAS;QACX,qBACE,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,IAAI,OAAO;QACT,qBACE,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAE,WAAU;0BAAgB;;;;;;;;;;;IAGnC;IAEA,qBACE;;0BACE,qKAAC,6HAAA,CAAA,UAAI;0BACH,cAAA,qKAAC;8BAAM;;;;;;;;;;;0BAGT,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAO,WAAU;;8CAChB,qKAAC;oCAAG,WAAU;8CAAyC;;;;;;8CAGvD,qKAAC;oCAAE,WAAU;;wCACV,OAAO,MAAM;wCAAC;wCAAE,OAAO,MAAM,KAAK,IAAI,UAAU;wCAAS;;;;;;;;;;;;;sCAI9D,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCACC,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,WAAU;;sDAEV,qKAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAe,SAAQ;4CAAY,MAAK;sDACxF,cAAA,qKAAC;gDAAK,UAAS;gDAAU,GAAE;gDAAwF,UAAS;;;;;;;;;;;wCACxH;;;;;;;8CAIR,qKAAC;oCAAI,WAAU;8CACZ,OAAO,GAAG,CAAC,CAAC,sBACX,qKAAC;4CAAmB,WAAU;;8DAC5B,qKAAC;oDAAG,WAAU;8DAAuC,MAAM,KAAK;;;;;;8DAChE,qKAAC;oDAAE,WAAU;8DAAuB,MAAM,KAAK;;;;;;8DAC/C,qKAAC;oDAAE,WAAU;;wDAAwB;wDACnB,IAAI,KAAK,MAAM,SAAS,EAAE,kBAAkB;;;;;;;8DAE9D,qKAAC;oDAAI,WAAU;;sEACb,qKAAC;4DACC,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;4DAC9C,WAAU;sEACX;;;;;;sEAGD,qKAAC;4DACC,SAAS,IAAM,aAAa,MAAM,EAAE;4DACpC,WAAU;sEACX;;;;;;;;;;;;;2CAhBK,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BlC","debugId":null}}]
}