{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/services/api.ts"],"sourcesContent":["// src/services/api.ts\nimport axios, { AxiosError, AxiosResponse } from 'axios';\n\n// 1. Configuração base do Axios\nconst api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000/animes',\n  timeout: 10000, // 10 segundos\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 2. Interceptores para tratamento global de erros\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    if (error.response) {\n      console.error('Erro na resposta:', {\n        status: error.response.status,\n        data: error.response.data,\n      });\n    } else if (error.request) {\n      console.error('Sem resposta do servidor:', error.request);\n    } else {\n      console.error('Erro na requisição:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 3. Tipagem das respostas\ninterface Anime {\n  id: string;\n  title: string;\n  genre: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// 4. Interface do serviço\ninterface ApiService {\n  getAnimes: () => Promise<AxiosResponse<Anime[]>>;\n  addAnime: (data: Omit<Anime, 'id' | 'createdAt' | 'updatedAt'>) => Promise<AxiosResponse<Anime>>;\n  updateAnime: (id: string, data: Partial<Omit<Anime, 'id' | 'createdAt'>>) => Promise<AxiosResponse<Anime>>;\n  deleteAnime: (id: string) => Promise<AxiosResponse<void>>;\n}\n\n// 5. Implementação do serviço\nconst apiService: ApiService = {\n  getAnimes: () => api.get('/'),\n\n  addAnime: (data) => api.post('/', data),\n\n  updateAnime: (id, data) => api.put(`/${id}`, data),\n\n  deleteAnime: (id) => api.delete(`/${id}`),\n};\n\n// 6. Exportação padrão\nexport default apiService;"],"names":[],"mappings":"AAAA,sBAAsB;;;;AACtB;;;;;;AAEA,gCAAgC;AAChC,MAAM,MAAM,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAC5C,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,mDAAmD;AACnD,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAA4B,UAC7B,CAAC;IACC,IAAI,MAAM,QAAQ,EAAE;QAClB,QAAQ,KAAK,CAAC,qBAAqB;YACjC,QAAQ,MAAM,QAAQ,CAAC,MAAM;YAC7B,MAAM,MAAM,QAAQ,CAAC,IAAI;QAC3B;IACF,OAAO,IAAI,MAAM,OAAO,EAAE;QACxB,QAAQ,KAAK,CAAC,6BAA6B,MAAM,OAAO;IAC1D,OAAO;QACL,QAAQ,KAAK,CAAC,uBAAuB,MAAM,OAAO;IACpD;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAoBF,8BAA8B;AAC9B,MAAM,aAAyB;IAC7B,WAAW,IAAM,IAAI,GAAG,CAAC;IAEzB,UAAU,CAAC,OAAS,IAAI,IAAI,CAAC,KAAK;IAElC,aAAa,CAAC,IAAI,OAAS,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;IAE7C,aAAa,CAAC,KAAO,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI;AAC1C;uCAGe","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/italo/Documentos/anime-catalog/src/pages/add/index.tsx"],"sourcesContent":["// pages/add/index.tsx\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport api from '../../services/api';\n\nexport default function AddAnime() {\n  const router = useRouter();\n  const [form, setForm] = useState({\n    title: '',\n    genre: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    // Validação simples\n    if (!form.title.trim() || !form.genre.trim()) {\n      setError('Preencha todos os campos');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      await api.addAnime({\n        title: form.title,\n        genre: form.genre\n      });\n      router.push('/'); // Volta para a lista após cadastro\n    } catch (err) {\n      setError('Erro ao cadastrar anime');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Adicionar Anime</title>\n      </Head>\n\n      <div className=\"container mx-auto p-4 max-w-md\">\n        <h1 className=\"text-2xl font-bold mb-6\">Adicionar Novo Anime</h1>\n        \n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\n              Título *\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={form.title}\n              onChange={handleChange}\n              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\n              placeholder=\"Ex: Attack on Titan\"\n              disabled={loading}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"genre\" className=\"block text-sm font-medium text-gray-700\">\n              Gênero *\n            </label>\n            <input\n              type=\"text\"\n              id=\"genre\"\n              name=\"genre\"\n              value={form.genre}\n              onChange={handleChange}\n              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\n              placeholder=\"Ex: Ação, Fantasia\"\n              disabled={loading}\n            />\n          </div>\n\n          <div className=\"flex justify-end space-x-2\">\n            <button\n              type=\"button\"\n              onClick={() => router.push('/')}\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\n              disabled={loading}\n            >\n              Cancelar\n            </button>\n            \n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:bg-blue-300\"\n              disabled={loading}\n            >\n              {loading ? (\n                <>\n                  <span className=\"inline-block animate-spin mr-2\">↻</span>\n                  Salvando...\n                </>\n              ) : (\n                'Salvar Anime'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AACA;AACA;AACA;;;;;;;;;;AAEe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO;QACP,OAAO;IACT;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QAET,oBAAoB;QACpB,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI;YAC5C,SAAS;YACT,WAAW;YACX;QACF;QAEA,IAAI;YACF,MAAM,+GAAA,CAAA,UAAG,CAAC,QAAQ,CAAC;gBACjB,OAAO,KAAK,KAAK;gBACjB,OAAO,KAAK,KAAK;YACnB;YACA,OAAO,IAAI,CAAC,MAAM,mCAAmC;QACvD,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,QAAQ,CAAA,OAAQ,CAAC;gBACf,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,qBACE;;0BACE,qKAAC,6HAAA,CAAA,UAAI;0BACH,cAAA,qKAAC;8BAAM;;;;;;;;;;;0BAGT,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCAA0B;;;;;;oBAEvC,uBACC,qKAAC;wBAAI,WAAU;kCACZ;;;;;;kCAIL,qKAAC;wBAAK,UAAU;wBAAc,WAAU;;0CACtC,qKAAC;;kDACC,qKAAC;wCAAM,SAAQ;wCAAQ,WAAU;kDAA0C;;;;;;kDAG3E,qKAAC;wCACC,MAAK;wCACL,IAAG;wCACH,MAAK;wCACL,OAAO,KAAK,KAAK;wCACjB,UAAU;wCACV,WAAU;wCACV,aAAY;wCACZ,UAAU;;;;;;;;;;;;0CAId,qKAAC;;kDACC,qKAAC;wCAAM,SAAQ;wCAAQ,WAAU;kDAA0C;;;;;;kDAG3E,qKAAC;wCACC,MAAK;wCACL,IAAG;wCACH,MAAK;wCACL,OAAO,KAAK,KAAK;wCACjB,UAAU;wCACV,WAAU;wCACV,aAAY;wCACZ,UAAU;;;;;;;;;;;;0CAId,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCACC,MAAK;wCACL,SAAS,IAAM,OAAO,IAAI,CAAC;wCAC3B,WAAU;wCACV,UAAU;kDACX;;;;;;kDAID,qKAAC;wCACC,MAAK;wCACL,WAAU;wCACV,UAAU;kDAET,wBACC;;8DACE,qKAAC;oDAAK,WAAU;8DAAiC;;;;;;gDAAQ;;2DAI3D;;;;;;;;;;;;;;;;;;;;;;;;;;AAQhB","debugId":null}}]
}